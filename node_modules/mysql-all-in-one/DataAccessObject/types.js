"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultUpsertOptions = exports.defaultGetPoolConnectionOptions = exports.defaultDataAccessObjectOptions = exports.isGroupDataOptions = exports.defaultDataSelectOptions = exports.isColumnValues = exports.isDataPacket = exports.isRowDataPacket = exports.isColumnGroups = exports.isRenamedColumns = void 0;
const types_1 = require("../QueryBuilder/types");
const isRenamedColumns = (val) => val !== undefined &&
    val !== null &&
    typeof val === "object" &&
    !Array.isArray(val) &&
    (0, types_1.isArrayOfStrings)(Object.values(val));
exports.isRenamedColumns = isRenamedColumns;
const isColumnGroups = (val) => val !== undefined &&
    val !== null &&
    typeof val === "object" &&
    !Array.isArray(val) &&
    Object.values(val).every((v) => (0, exports.isRenamedColumns)(v) || (0, types_1.isArrayOfStrings)(v));
exports.isColumnGroups = isColumnGroups;
const isRowDataPacket = (val) => typeof val === "object" &&
    !Array.isArray(val) &&
    val !== null &&
    Object.values(val).every((v) => (0, types_1.isSqlValues)(v) || (0, exports.isDataPacket)(v));
exports.isRowDataPacket = isRowDataPacket;
const isDataPacket = (val) => Array.isArray(val) && val.every((v) => (0, exports.isRowDataPacket)(v));
exports.isDataPacket = isDataPacket;
const isColumnValues = (val) => Array.isArray(val) && val.every((v) => (0, types_1.isSqlValues)(v));
exports.isColumnValues = isColumnValues;
exports.defaultDataSelectOptions = {
    returnMode: "normal",
};
const isGroupDataOptions = (val) => val !== undefined &&
    val !== null &&
    !Array.isArray(val) &&
    typeof val === "object" &&
    Object.values(val).length === 2 &&
    typeof val.by === "string" &&
    val.by.length !== 0 &&
    (0, exports.isColumnGroups)(val.columnGroups);
exports.isGroupDataOptions = isGroupDataOptions;
exports.defaultDataAccessObjectOptions = {
    usePreparedStatements: true,
};
exports.defaultGetPoolConnectionOptions = {
    multipleStatements: false,
};
exports.defaultUpsertOptions = {
    primaryKey: "id",
};
