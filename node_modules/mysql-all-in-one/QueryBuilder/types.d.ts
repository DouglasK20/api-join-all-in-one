export declare type SqlValues = string | Date | null | boolean | number | undefined;
export interface PreparedStatement {
    statement: string;
    values: Array<SqlValues>;
    __is_prep_statement: boolean;
}
export declare const isSqlValues: (val: any) => val is SqlValues;
export declare const isArrayOfStrings: (val: any) => val is string[];
export declare const emptyPrepStatement: PreparedStatement;
export declare const isPreparedStatement: (val: any) => val is PreparedStatement;
export declare const generateQueryFromPreparedStatement: (preparedStatement: PreparedStatement) => string;
export declare class SqlColumn {
    column: string;
    constructor(column: string);
}
export declare class SqlExp {
    expression: string;
    constructor(expression: string);
}
export interface SqlExpressionPreparedStatement {
    statement: string;
    values: Array<SqlValues>;
    __is_prep_statement: boolean;
}
export declare const isSqlExpressionPreparedStatement: (val: any) => val is SqlExpressionPreparedStatement;
